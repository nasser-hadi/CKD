// <auto-generated />
using System;
using CKD.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CKD.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250611165800_CreateOnetoManyRelationBetweenProductsAndEngineTablesInDatabase")]
    partial class CreateOnetoManyRelationBetweenProductsAndEngineTablesInDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CKD.DataAccess.Models.EngineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 11L);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("TBL_EngineTypes", (string)null);
                });

            modelBuilder.Entity("CKD.DataAccess.Models.Part", b =>
                {
                    b.Property<string>("TechNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FarsiName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsComponent")
                        .HasColumnType("bit");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("TechNo");

                    b.ToTable("TBL_Parts", (string)null);
                });

            modelBuilder.Entity("CKD.DataAccess.Models.Product", b =>
                {
                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CreateByUserEID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EngineType_Id")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductVersion")
                        .HasColumnType("int");

                    b.Property<string>("Usage")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("ProductCode");

                    b.HasIndex("EngineType_Id");

                    b.ToTable("TBL_Products", (string)null);
                });

            modelBuilder.Entity("CKD.DataAccess.Models.ProductPart", b =>
                {
                    b.Property<string>("Product_ProductCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Part_TechNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("Product_ProductCode", "Part_TechNo");

                    b.HasIndex("Part_TechNo");

                    b.ToTable("TBL_ProductParts", (string)null);
                });

            modelBuilder.Entity("CKD.DataAccess.Models.Product", b =>
                {
                    b.HasOne("CKD.DataAccess.Models.EngineType", "EngineType")
                        .WithMany("Products")
                        .HasForeignKey("EngineType_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EngineType");
                });

            modelBuilder.Entity("CKD.DataAccess.Models.ProductPart", b =>
                {
                    b.HasOne("CKD.DataAccess.Models.Part", "Part")
                        .WithMany("ProductParts")
                        .HasForeignKey("Part_TechNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CKD.DataAccess.Models.Product", "Product")
                        .WithMany("ProductParts")
                        .HasForeignKey("Product_ProductCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Part");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CKD.DataAccess.Models.EngineType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CKD.DataAccess.Models.Part", b =>
                {
                    b.Navigation("ProductParts");
                });

            modelBuilder.Entity("CKD.DataAccess.Models.Product", b =>
                {
                    b.Navigation("ProductParts");
                });
#pragma warning restore 612, 618
        }
    }
}
